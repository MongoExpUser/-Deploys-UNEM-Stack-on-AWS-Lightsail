name: CI - UNEMY-Stack-on-AWS-Lighsail

on:
  push:
    branches:
    - main
  pull_request:
   # matches pull request for all branches and tag names

jobs:
  Ubuntu-Python-Terraform-CDK:
    runs-on: ubuntu-latest
    env:
      DEV: 'yes'
      PROD: 'no'
      DIFF: 'no'
      APPLY: 'no'
      PROJECT_NAME: 'UNEMY-Stack-on-AWS-Lighsail'
      PROJECT_DESCRIPTION: 'Deploy UNEMY Stack on AWS Lighsail'
      DIRECTORY: 'deploy'
      #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #AWS_REGION: ${{ secrets.AWS_REGION }}
      #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
    
    - name: Set Up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    
    - name: Install Dependencies
      run: | 
         sudo apt-get -y install python3-pip awscli
         python3 -m pip install boto3 --upgrade awscli
         sudo apt-get install npm
         sudo npm install -g npm
         sudo npm install -g cdktf-cli@^0.7.0
         sudo npm install -g cdktf@^0.7.0
         sudo npm install -g constructs@^10.0.9
         #sudo npm install -g @types/node@14.17.27
         cd /
         sudo mkdir $DIRECTORY
         cd /$DIRECTORY
         sudo cdktf init --template="python-pip" --local --project-name $PROJECT_NAME --project-description $PROJECT_DESCRIPTION
         sudo npm install -a @cdktf/provider-aws @types/node@14.17.27
         cd /$DIRECTORY
         df -m
         free -m
         pwd
         ls
         sudo chmod 777 *.*
         sudo echo ' {
            "language": "python",
            "app": "python3 ./main.py",
            "terraformProviders": ["aws@~> 3.24"] 
         }' > /$DIRECTORY/cdktf.json
         #sudo cdktf get
         df -m
         free -m
         pwd
         ls
             
    - name: Input JSON File - Dev
      if: ${{ env.DEV == 'yes' }}
      run: |-
        cat variables-dev.json >> /$DIRECTORY/variables.json <<EOF
        EOF
        
    - name: Input JSON File - Prod
      if: ${{ env.PROD == 'yes' }}
      run: |-
        cat variables-prod.json >> /$DIRECTORY/variables.json <<EOF
        EOF
        
    - name: Bash Start-Up Script 
      run: |-
        cat startup-script.sh /$DIRECTORY/startup-script.sh <<EOF
        EOF
        
    - name: Python Terraform CDK Script
      run: |-
        cat main.py /$DIRECTORY/main.py<<EOF
        EOF
        
    - name: Current Working Directory, Files & Sizes
      run: | 
         cd /$DIRECTORY
         df -m
         free -m
         pwd
         ls

    - name: Python Terraform CDK Plan
      if:  (env.PLAN == 'yes') && ( env.DEV == 'yes' || env.PROD == 'yes' )
      run: sudo cdktf synth
      
    - name: Python Terraform CDK Difference
      if:  (env.DIFF == 'yes') && ( env.DEV == 'yes' || env.PROD == 'yes' )
      run: sudo cdktf cdktf diff
      
    - name: Python Terraform CDK Apply - Dev
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && env.APPLY == 'yes' && env.DEV == 'yes'
      run: sudo cdktf deploy --auto-approve
    
    - name: Python Terraform CDK Apply - Prod
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' && env.APPLY == 'yes' && env.PROD == 'yes'
      run: sudo cdktf deploy --auto-approve
  
    - name: Python Terraform CDK Destroy
      if: ${{ env.DESTROY == 'yes' }}
      run: sudo cdktf destroy --auto-approve
