name: Python Terraform CDK Using Pip

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    env:
      DEV: 'yes'
      PROD: 'no'
      #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #AWS_REGION: ${{ secrets.AWS_REGION }}
      #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    
    - name: Install Dependencies
      run: | 
         sudo apt -y install python3.9 python3-pip awscli
         python3 -m pip install boto3 --upgrade awscli
         sudo apt install npm
         sudo npm install -g cdktf-cli
         sudo npm install -g cdktf-cli@next
         mkdir terraform_python_cdk
         cd terraform_python_cdk
         # store state locally for now (change backend later)
         sudo cdktf init --template="python3-pip" --local
         sudo npm install -a @cdktf/provider-aws
         sudo cdktf get
         
    - name: Copy Terraform Python CDK modules - Dev
      if: ${{ env.DEV == 'yes' }}
      run: |-
        cat main.py <<EOF
        EOF
        &&
        cat startup-script.sh <<EOF
        EOF

    #- name: Invoke Terraform Python CDK modules - Dev
    #  if: ${{ env.DEV == 'yes' }}
    #  run: python3 main.py
